-Interface
- Read in routes from file
- Print out all routes in a well-formatted way
- MST based on shortest distance, if unconnected show the forest (Do it from both ends)
- 3 Shortest Path Searches: Input source and target, recieve path from source - proxy - proxy - target, cost of each link + total cost of trip, if tie print one, if no path say so
	- shortest path based on miles: 
	- shortest path based on price:
	- shortest path based on # hops:
- Given a dollar amount, print out all possible trips which cost less than the current one
	- Recursion, if we are already >= price dont bother looking ahead, pruning.
- Add a new route to graph: ASSUME BOTH CITIES EXIST.  INPUT: two cities, distance, price
- remove a route from schedule: INPUT: vertices defining the route (v,w) remove edge between v and w, if none exist say so
- Save to same file and quit program.

ALL ROUTES ARE BIDIRECTIONAL